"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[meetupId]",{

/***/ "./pages/[meetupId]/index.js":
/*!***********************************!*\
  !*** ./pages/[meetupId]/index.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_meetups_MeetupDetail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components/meetups/MeetupDetail */ \"./components/meetups/MeetupDetail.js\");\n\n\nfunction MeetupDetails(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_meetups_MeetupDetail__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        image: props.meetupData.image,\n        title: props.meetupData.title,\n        address: props.meetupData.address,\n        description: props.meetupData.description\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\DD\\\\Desktop\\\\React\\\\25a-next-js\\\\pages\\\\[meetupId]\\\\index.js\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n_c = MeetupDetails;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MeetupDetails); /* import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\n//meetup data does not change often, we don't have edit, and even if we had, it would not be every second.\r\n\r\n//but here the problem is: this is a dynamic page, when we fetch data we need to identify which meetup we need. Ex. its Id. Id is in the URl,\r\n//USE ROUTER WILL NOT WORK : we usually it with useRouter hook and query property. But use Router can only be sued in the component function, not in staticProps function.\r\n//for this we need context (in get static props it doesn't have request repsonse, ama it has params key. context.params - object where the identifiers will be properties and the values are the values encoded in the url.\r\n\r\n//ERROR: getStaticPaths is required: another function, that we need to export in a page component path if it's a dynamic page and we're using get static props. Not for get server side props and not for using neither of them.\r\n//why? With props, a page is pregenerated during the build process. For the dynamic page it needs tp oregenerate all versions of that dynamic page in advance for all the supported ids. It needs to know for which values it needs to pregenerate them during the build process.\r\n//it returns object where we describe all the dynamic segment values, returns object with path key - array of object - one object for every dynamic page :params key object with all keys (ako se nested pokje natre), tuka samo po edno.\r\n//we will not hardcode, but fetch it from a database and generate it dynamically.\r\n\r\n//Error: fallback key:\r\n//next to paths key we need to return fallback key: tells next js whether your paths array contains all supported parameter values, or just some of them. False means it contains all supported meetup values (if a user enters something random sho ne e na listata kje pokazhi 404) ako e true, next js will generate something for the request i da ne e dolu vo paths navedeno. True e korisno ako podocna ima novi stvari da generira as new requests are coming in. Tuka ne ni trebe.\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dijananas:dijananas@cluster0.mket2ir.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //pass first object as empty, (find all object, we put here criteria), pass second argument to define which fields we need to return - {_id: 1} this means only include the ID but no other field values. WE're only fetching the ids.\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  //this takes us to that path vo url, it puts the id in the url but does not fetch the data. Oti e vaka glupo.\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  //fetch data for a single meetup\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dijananas:dijananas@cluster0.mket2ir.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //pass first object as empty, (find all object, we put here criteria), pass second argument to define which fields we need to return - {_id: 1} this means only include the ID but no other field values. WE're only fetching the ids.\r\n  //find one finds one document,we pass object on what to search we can pass the fields names (title, id, description) and the values we need for them.\r\n  //we wrapt the meetupId with ObjectId imported from Mongo db jer ne moj da go naj ko string. this is stupid. To convert it to object. Posle dolu vo props we need to convert it back to a string.\r\n  const obId = new ObjectId(meetupId);\r\n\r\n  const selectedMeetup = meetupsCollection.findOne({\r\n    _id: obId,\r\n  });\r\n\r\n  client.close();\r\n  console.log(selectedMeetup._id);\r\n\r\n  // console.log(meetupId, \"from getstaticprops in details page\");\r\n  //this will be logged in the terminal, not the browser becausae it's server side code.\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n//then we pass this as props pogore za da gi displaynime fo meetupDetails component.\r\n\r\nexport default MeetupDetails;\r\n */ \nvar _c;\n$RefreshReg$(_c, \"MeetupDetails\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/[meetupId]/index.js\n"));

/***/ })

});